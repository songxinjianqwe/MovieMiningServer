<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.newsong.dao.MovieReviewDOMapper">
    <resultMap id="BaseResultMap" type="me.newsong.domain.entity.MovieReviewDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <constructor>
            <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="movie_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="helpful_times" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="view_times" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="score" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
            <arg column="content" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="summary" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="is_display" javaType="java.lang.Boolean" jdbcType="SMALLINT"/>
            <arg column="user_recommend_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="movie_recommend_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="recommend_score" javaType="java.lang.Double" jdbcType="DECIMAL"/>
        </constructor>
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        id, movie_id, user_id, helpful_times, view_times, score, time, content,
        summary
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from movie_review
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from movie_review
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="me.newsong.domain.entity.MovieReviewDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into movie_review (id, movie_id, user_id,
        helpful_times, view_times,
        score, time, content,
        summary,is_display,user_recommend_id,movie_recommend_id,recommend_score)
        values (#{id,jdbcType=BIGINT}, #{movieId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
        #{helpfulTimes,jdbcType=INTEGER}, #{viewTimes,jdbcType=INTEGER},
        #{score,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR},
        #{summary,jdbcType=VARCHAR},#{isDisplay},#{userRecommendId},#{movieRecommendId},#{recommendScore})
    </insert>
    <insert id="insertBatch" parameterType="me.newsong.domain.entity.MovieReviewDO">
        insert into movie_review (movie_id, user_id,
        helpful_times, view_times,
        score, time, content,
        summary,is_display,user_recommend_id,movie_recommend_id,recommend_score)
        values
        <foreach collection="reviews" item="review" separator=",">
            (#{review.movieId,jdbcType=VARCHAR}, #{review.userId,jdbcType=VARCHAR},
            #{review.helpfulTimes,jdbcType=INTEGER},
            #{review.viewTimes,jdbcType=INTEGER},
            #{review.score,jdbcType=INTEGER}, #{review.time,jdbcType=TIMESTAMP}, #{review.content,jdbcType=VARCHAR},
            #{review.summary,jdbcType=VARCHAR},#{isDisplay},#{userRecommendId},#{movieRecommendId},#{recommendScore})
        </foreach>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="me.newsong.domain.entity.MovieReviewDO">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update movie_review
        <set>
            <if test="movieId != null">
                movie_id = #{movieId,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="helpfulTimes != null">
                helpful_times = #{helpfulTimes,jdbcType=INTEGER},
            </if>
            <if test="viewTimes != null">
                view_times = #{viewTimes,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="summary != null">
                summary = #{summary,jdbcType=VARCHAR},
            </if>
            <if test="isDisplay != null">
                is_display = #{isDisplay}
            </if>
            <if test="userRecommendId != null">
                user_recommend_id = #{userRecommendId}
            </if>
            <if test="movieRecommendId != null">
                movie_recommend_id = #{movieRecommendId}
            </if>
            <if test="recommendScore != null">
                recommend_score = #{recommendScore}
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="findAllMovieIds" resultType="string">
        select distinct movie_id
        from movie_review
        where is_display = 1
    </select>

    <select id="findAllUserIds" resultType="string">
        select distinct user_id
        from movie_review
        where is_display = 1
    </select>

    <select id="findByMovieId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from movie_review
        where movie_id = #{id}
    </select>

    <select id="findByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from movie_review
        where user_id = #{id}
    </select>

    <select id="findByIdOrderByHelpful" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from movie_review
        where movie_id=#{id} and  is_display = 1
        order by (helpful_times / view_times) desc
    </select>

    <select id="findByIdOrderByTime" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from movie_review
        where movie_id=#{id} and is_display = 1
        order by time desc
    </select>

    <select id="countByMovieId" resultType="int">
        select count(*)
        from movie_review
        where movie_id = #{id} and  is_display = 1
    </select>

</mapper>