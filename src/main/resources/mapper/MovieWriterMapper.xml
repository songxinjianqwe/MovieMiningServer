<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.newsong.dao.MovieWriterMapper" >
  <resultMap id="BaseResultMap" type="me.newsong.domain.entity.MovieWriterKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <idArg column="movie_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <idArg column="writer_id" jdbcType="BIGINT" javaType="java.lang.Long" />
    </constructor>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="me.newsong.domain.entity.MovieWriterKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from movie_writer
    where movie_id = #{movieId,jdbcType=BIGINT}
      and writer_id = #{writerId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="me.newsong.domain.entity.MovieWriterKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into movie_writer (movie_id, writer_id)
    values (#{movieId,jdbcType=BIGINT}, #{writerId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="me.newsong.domain.entity.MovieWriterKey" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into movie_writer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="movieId != null" >
        movie_id,
      </if>
      <if test="writerId != null" >
        writer_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="movieId != null" >
        #{movieId,jdbcType=BIGINT},
      </if>
      <if test="writerId != null" >
        #{writerId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
    
    
    <sql id="Base_Column_List">
        movie_id,writer_id
    </sql>
    <select id="findById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from movie_writer
        where movie_id = #{movieId} and writer_id = #{writerId}
    </select>
</mapper>