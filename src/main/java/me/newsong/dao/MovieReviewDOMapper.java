package me.newsong.dao;

import com.github.pagehelper.Page;
import me.newsong.domain.entity.MovieReviewDO;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface MovieReviewDOMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_review
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_review
     *
     * @mbggenerated
     */
    int insert(MovieReviewDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_review
     *
     * @mbggenerated
     */
    int insertSelective(MovieReviewDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_review
     *
     * @mbggenerated
     */
    MovieReviewDO selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_review
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(MovieReviewDO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movie_review
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(MovieReviewDO record);

    List<String> findAllMovieIds();

    List<String> findAllUserIds();

    List<MovieReviewDO> findByMovieId(@Param("id") String id);

    List<MovieReviewDO> findByUserId(@Param("id") String id);
    
    Page<MovieReviewDO> findByIdOrderByHelpful(@Param("id") String id, @Param("pageNum") int pageNum, @Param("pageSize") int pageSize);

    Page<MovieReviewDO> findByIdOrderByTime(@Param("id") String id, @Param("pageNum") int pageNum, @Param("pageSize") int pageSize);

    Integer countByMovieId(@Param("id") String id);

    void insertBatch(@Param("reviews") List<MovieReviewDO> reviews);
    List<MovieReviewDO> findAllUnDisplay();
}